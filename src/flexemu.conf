[IoDevices]
; Flexemu, mapping of I/O-device into memory
;
; Format:
;    <device_name>=<base_address_hex>[,<byte_size_hex>]
;
; <device_name>:      The name of the I/O-device. See IoDevice::getName().
;                     Supported device names:
;                     mmu: Eurocom specific memory management unit
;                     pia1: MC6821 parallel I/O, used for keyboard I/O
;                     pia2: MC6821 Eltec analog joystick I/O, mouse buttons
;                     acia1: MC6850 serial I/O, used for terminal I/O
;                     vico1: Eurocom specific video control register 1
;                     vico2: Eurocom specific video control register 2
;                     rtc: MC146818 real time clock (hardware extension)
;                     fdc: WD1793 floppy disk controller
;                     drisel: Eurocom specific drive select and status register
;                     command: Send commands to emulation host (emulation only)
;
; <base_address_hex>: The hexadecimal base address where the I/O-device is
;                     mapped into memory.
;
; <byte_size_hex>:    (optional) The number of bytes this device is mapped into
;                     memory. If not specified the default size of this 
;                     I/O-device is used instead. See IoDevice::sizeOfIo().
;                     If this size is > sizeOfIo() then the device is
;                     mirrored multiple times into memory.
;                     If this size is < sizeOfIo() then only part of the device
;                     is mapped into memory.
;
mmu=FFE0
pia1=FCF0   
acia1=FCF4
vico1=FCF6
vico2=FCF7
pia2=FCF8
; MC146818: Only part of the device is mapped into memory space.
rtc=FD00,30
fdc=FD30
; drisel: Same register is mirrored 4 times in address space.
drisel=FD38,4
command=FD3C
;
[SERPARAddress]
; Flexemu, mapping of SERPAR flag to be used to switch between terminal mode
; (serial I/O over ACIA) and graphic mode (I/O over GUI).
; The SERPAR flag has to be supported by the monitor program.
; Format:
;     <monitor_filename>=<serpar_address_hex>
;
; <monitor_filename>:   The filename of the monitor program (without path).
; <serpar_address_hex>: The address of the SERPAR flag.
;                       if [SERPAR] == 0x00 output is written to GUI
;                       if [SERPAR] != 0x00 output is written to terminal
;
neumon54.hex=EF86
