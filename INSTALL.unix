********************************************
* Compiling/Install flexemu on Unix/Linux  *
********************************************

Flexemu supports configure scripts. So there are four steps to compile and
install it:

        - export QT_SELECT=qt5
        - ./configure --prefix=/usr --sysconfdir=/etc
        - make
        - sudo make install

prerequisites:

        On a debian based system (Debian / Ubuntu / Linux Mint / Raspbian ...)
        install the following deb-packages:

        Using Qt5 libraries:
            sudo apt-get install build-essential libncurses-dev qtbase5-dev qtbase5-dev-tools libqt5x11extras5-dev

        Using Qt6 libraries:
            sudo apt-get install build-essential libncurses-dev qt6-base-dev qt6-base-dev-tools

remarks:

        - flexemu project compiles on almost every linux distribution. In
          subdirectory docker there are some example Dockerfiles how to build
          and execute all flexemu executables using docker. There are examples
          using different package managers like:
             apt (debian)
             dnf, tdnf (fedora)
             zypper (opensuse)
             apk (alpine)
             pacman (archlinux)
             slackpkg (slackware)
             xbps (voidlinux)
          Most important prerequisite to build flexemu project are the qt5 or
          qt6 libraries and development files.
          See file docker/readme.md how these docker images can be build.
        - When using configure with --prefix=/usr flexemu also get's
          integrated into the desktop and appears in the System menu
          category, Emulator sub category. If --prefix is not specified
          the default prefix is /usr/local. For this prefix desktop or
          icon files may not be correctly integrated into the desktop.
          This has been exprienced with Linux Mint. It may behave
          differently for other Linux distributions.
        - If You don't want the disassembler to substitute some FLEX jump
          vectors to print as labels comment out the following switch in
          src/misc1.h:
          #define FLEX_LABEL
        - There are two MC6809 processor implementations. One of them is
          about 20% slower but a very well structured implementation. Each
          instruction is executed in it's own function. So it can easily be
          debuged with gdb. The processor cycles are exactly calculated.
          The second is faster, the complete processor is emulated in one
          inline-function. The processor cycles are only aproximated
          (4.8 cycles for each instruction). The faster processor can
          be compiled with uncommenting the following switch in src/misc1.h:
          /* #define FASTFLEX */
        - There are post installation steps executed to provide desktop
          icons and adding mime types for support of *.dsk, *.flx and *.wta
          files. If they do not work as expected they can be disabled with
          the configure option --disable-post-install
          The post installation steps are (assuming --prefix=/usr):

             gtk-update-icon-cache /usr/share/icons/hicolor
             update-mime-database /usr/share/mime
             update-desktop-database /usr/share/applications

        - For static code analysis there is a target 'clang-tidy-check'
          available. It can be used as:

             make clang-tidy-check

          By default the used executable name is 'clang-tidy'. With the
          environment variable CLANG_TIDY a different executable can be chosen.
          For example:

             export CLANG_TIDY=clang-tidy-16

          The executed checks are located in file '.clang-tidy' in the base
          directory. When executing ./configure the existance of clang-tidy
          executable intentionally is not checked so it is an optional feature.

***********************
* help, Documentation *
***********************

There are some html-pages for flexemu:

mc6809.htm      Microprocessor MC6809 documentation
e2hwdesc.htm    Eurocom II hardware description
flexemu.htm     general description, command line options
flexuser.htm    the FLEX users manual
flexutil.htm    some FLEX utilities
flexdos.htm     description of the FLEX disk operating system
flexfms.htm     description of the FLEX file management system
flexfs.htm      'filesystems' supported by flexemu
flexerr.htm     description of the FLEX error messages
flexfcb.htm     description of a FLEX file control block
flexmem.htm     the FLEX memory map
neumon54.htm    Flexemu monitor program V5.4 spec for Eurocom II/V7
mon53_54.htm    Flexemu monitor program V5.3 and V5.4 for Eurocom II/V7
monu54.htm      Flexemu monitor program U5.4 for Eurocom II/V7
mon24.htm       Flexemu monitor program for Eurocom II/V5

