name: flexemu-windows-build-and-test
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ windows-2022 ]
        qt-build: [ A, B ]
      fail-fast: false
    env:
      QTDIR: ${{ github.workspace }}\Qt

    runs-on: ${{ matrix.os }}
    environment: development
    steps:

      - name: Set Qt6 Version
        shell: cmd
        run: |
          IF "${{ matrix.qt-build }}"=="A" (
            echo QT_VERSION=${{ vars.QT6_VERSION_A }}>>%GITHUB_ENV%
          ) ELSE (
            IF "${{ matrix.qt-build }}"=="B" (
              echo QT_VERSION=${{ vars.QT6_VERSION_B }}>>%GITHUB_ENV%
            )
          )

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Install Qt6 x64
        uses: jurplel/install-qt-action@v3
        with:
          version:      '${{ env.QT_VERSION }}'
          host:         'windows'
          target:       'desktop'
          arch:         'win64_msvc2022_64'
          dir:          '${{ github.workspace }}'
          archives:     'qtbase'
          setup-python: 'false'
          aqtversion:   '==3.1.*'
          py7zrversion: '==0.20.*'
          extra:        '--base ${{ vars.QT_DOWNLOAD_MIRROR }}'

      - name: Context
        shell: cmd
        run: |
          echo OS         ${{ matrix.os }}
          echo Qt version %QT_VERSION%
          echo Qt dir     %QTDIR%

      - name: Configure project for Visual Studio
        shell: bash
        run: |
          cd build/windows
          echo VS_VERSION=2022 > vsversion.ini
          echo VS_TYPE=Enterprise >> vsversion.ini

      - name: Configure Qt
        shell: cmd
        run: |
          mklink /d "%QTDIR%\x64" %QTDIR%\%QT_VERSION%\msvc2022_64
          powershell.exe .\build\windows\setQtProperties.ps1 -inFile src\msvcQtPath.props.in -version %QT_VERSION%

      - name: Build
        shell: bash
        run: |
          cd build/windows
          ./rebuild_flexemu_all_and_copy_libs.sh -c

      - name: Qt x64 Directory Artifact
        shell: cmd
        run: |
          mkdir result\x64\Release
          mkdir result\x64\Debug
          dir /s %QTDIR%\x64 >result\x64\qt%QT_VERSION%-x64-dirlist.log
          REM Copy Visual Studio projects and solution
          mkdir result\x64\vs2022\Qt%QT_VERSION%\src
          COPY /Y buildx64\Flexemu.sln result\x64\vs2022\Qt%QT_VERSION%
          COPY /Y buildx64\src\*.vcxproj result\x64\vs2022\Qt%QT_VERSION%\src
          REM Copy flexemu executables incl. dependencies
          XCOPY bin result\bin /VSEI
          REM Copy unittests incl. dependencies
          COPY /Y buildx64\fmt\bin\Release\fmt*.dll result\x64\Release
          COPY /Y buildx64\bin\Release\gtest.dll result\x64\Release
          COPY /Y buildx64\bin\Release\unittests.exe result\x64\Release
          XCOPY buildx64\test\data result\x64\Release\data /SVEI
          COPY /Y buildx64\fmt\bin\Debug\fmt*.dll result\x64\Debug
          COPY /Y buildx64\bin\Debug\gtest.dll result\x64\Debug
          COPY /Y buildx64\bin\Debug\unittests.exe result\x64\Debug
          XCOPY buildx64\test\data result\x64\Debug\data /SVEI

      - name: Test x64
        shell: cmd
        continue-on-error: false
        run: |
          echo ===== Release =====
          cd buildx64\test
          ..\bin\Release\unittests.exe || EXIT /B
          cd ..\..
          set BINPATH=bin\Qt%QT_VERSION%\x64\Release
          %BINPATH%\dsktool.exe -V || EXIT /B
          %BINPATH%\mdcrtool.exe -V || EXIT /B
          %BINPATH%\flex2hex.exe -V || EXIT /B
          %BINPATH%\dsktool.exe -l disks\games.dsk || EXIT /B
          %BINPATH%\dsktool.exe -f new_r.dsk -S 80dsdd -y || EXIT /B
          %BINPATH%\dsktool.exe -C disks\system.dsk -T new_r.dsk || EXIT /B
          IF EXIST new_r.dsk COPY /Y new_r.dsk result\x64\Release\new_r%QT_VERSION%.dsk
          %BINPATH%\dsktool.exe -l new_r.dsk || EXIT /B
          del /F new_r.dsk
          echo ===== Debug =====
          cd buildx64\test
          ..\bin\Debug\unittests.exe || EXIT /B
          cd ..\..
          set BINPATH=bin\Qt%QT_VERSION%\x64\Debug
          %BINPATH%\dsktool.exe -V || EXIT /B
          %BINPATH%\mdcrtool.exe -V || EXIT /B
          %BINPATH%\flex2hex.exe -V || EXIT /B
          %BINPATH%\dsktool.exe -l disks\games.dsk || EXIT /B
          %BINPATH%\dsktool.exe -f new_d.dsk -S 80dsdd -y || EXIT /B
          %BINPATH%\dsktool.exe -C disks\system.dsk -T new_d.dsk || EXIT /B
          IF EXIST new_d.dsk COPY /Y new_d.dsk result\x64\Release\new_d%QT_VERSION%.dsk
          %BINPATH%\dsktool.exe -l new_d.dsk || EXIT /B
          del /F new_d.dsk

      - name: Create Windows installer
        shell: bash
        continue-on-error: false
        run: |
          cd build/windows
          # NSIS EnVar plugin has to be installed.
          ./download_and_install_envar_plugin.sh -d installer -s
          ls -l installer
          # Create the Windows Installer using NSIS.
          ./create_installer.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: flexemu-windows-build-result-${{ env.QT_VERSION }}
          path: result
          if-no-files-found: error
