<!DOCTYPE HTML>
<html lang="en">
<head>
<meta charset="UTF-8">
<!-- This google font has to be downloaded. O.m.o. it best fits to this
     project because it looks like the output of a vintage dot matrix printer
     when printing in highest density.
     When first time diplaying it the browser has to download it from the
     internet. When working offline hopefully the browser automatically jumps
     to the next font in the font-family list. -->
<link href='https://fonts.googleapis.com/css?family=Courier%20Prime' rel='stylesheet'>
<link rel="stylesheet" href="flexemu.css">
<title>flexemu - an MC6809 emulator running FLEX</title>
</head>
<body>
<h1>flexemu - an MC6809 emulator running FLEX</h1>
<hr>
<h2 id="synopsis">SYNOPSIS</h2>
<h3 id="synopsis_linux">On Linux</h3>
<p class="justify">flexemu [-i] [-h] [-f&nbsp;path] [-p&nbsp;path] [-c&nbsp;color] [-0&nbsp;path] [-1&nbsp;path] [-2&nbsp;path] [-3&nbsp;path] [-t] [-r&nbsp;&lt;two_hex_digits&gt;] [-v] [-u] [-j&nbsp;screen_factor] [-C&nbsp;startup_command] [-O&nbsp;cccc]</p>
<h3 id="synopsis_windows">On Windows</h3>
<p class="justify">flexemu [-i] [-h] [-f&nbsp;path] [-p&nbsp;path] [-c&nbsp;color] [-0&nbsp;path] [-1&nbsp;path] [-2&nbsp;path] [-3&nbsp;path] [-v] [-u] [-j&nbsp;screen_factor] [-C&nbsp;startup_command] [-O&nbsp;cccc]</p>

<h2 id="description">DESCRIPTION</h2>
<div class="justify">
<b>flexemu</b> emulates a MC6809 microprocessor system running
<a href="https://en.wikipedia.org/wiki/FLEX_(operating_system)">FLEX Operating System</a>.
Additional hardware modules as for ex. two MC6821 parallel input/output
ports, a floppy disk controller WD1793, a
<a href="e2hwdesc.htm#RealtimeClock">MC146818 real time clock</a>
and a special video screen interface completely emulate the hardware of an
<a href="e2hwdesc.htm#E2V5">Eurocom II/V5</a> or an
<a href="e2hwdesc.htm#E2V7">Eurocom II/V7</a> computer. It was developed by
<a href="http://www.eltec.de/">ELTEC Elektronik</a> and mainly distributed
in Germany in the 1980ies.
</div>

<p>
<b>flexemu</b> supports the following features:
<p>
<ul>
 <li>running on Linux and Windows.
 <li>using Qt framework as platform independent user interface
 <li>Emulate
<a href="e2hwdesc.htm#E2V5">Eurocom II/V5</a> with digital cassette drives or
<a href="e2hwdesc.htm#E2V7">Eurocom II/V7</a> with floppy disk drives.
<li>supporting all <a href="mc6809.htm">MC6809</a> instructions incl. CWAI and SYNC
 <li>CPU monitor with start/stop/step/next/reset, two breakpoints
 <li>continuous display of CPU frequency and cycle count
 <li>full interrupt support
 <li>stop processor and pop up dialog at unimplemented processor instructions
 <li>Optionally support
<a href="mc6809.htm#UndocumentedInstructions">undocumented processor instructions</a>
 <li>Configurable frequency control to emulate with fixed, maximum possible
or original frequency
 <li>mouse pointer support
 <li>512 x 256 pixel, 1, 3 or 6 bit plane
<a href="e2hwdesc.htm#VideoDisplay">video graphics display</a> with 2, 8 or
     64 colors
 <li><a href="e2hwdesc.htm#RealtimeClock">MC146818 real time clock</a>
 <li>
<a href="e2hwdesc.htm#MMU">MMU</a> for extension of the 64K address range
 <li>
<a href="e2hwdesc.htm#96KbRamExt">2 x 96 KByte RAM extension</a> or
<a href="e2hwdesc.htm#384KbRamExt">2 x 288 KByte RAM extension</a>
 <li>MC6850 serial line used for terminal I/O
 <li>terminal only mode without graphical user interface (Linux only)
 <li>WD1793 floppy disk controller support with up to 4 disk drives
 <li>support of disk images (DSK-files) but also native file system
 <li>compatible to
<a href="http://ourtimelines.com/reflex/tocpage.html"> Ben Williams FLEX emulators</a> DSK format
 <li>MC6809 CPU emulation is running in a separate thread
     for maximum performance
 <li>0% host CPU load during MC6809 CPU emulation is stopped
 <li>0% host CPU load during CWAI and SYNC Instruction
 <li>minimum host CPU load if emulated CPU is running with original frequency
 <li>On Linux Signal SIGINT, SIGUSR1 and SIGUSR2 generate NMI,
     IRQ or FIRQ
 <li>Configurable CPU Instruction logging within address range
     and/or Start/Stop trigger address
 <li>dynamic mount/unmount of disks possible
 <li>file conversion from/to FLEX ASCII file format
 <li><a href="http://www.eltec.de/">ELTEC</a> full screen editor e.cmd included
 <li>command for exiting emulator
 <li>command to dynamically mount/update/umount drives
 <li>command to send a reset/irq/firq/nmi to CPU
 <li>command to display processor frequency/cycle count
 <li>command to switch between terminal and graphical mode
 <li>command to format a disk
 <li>HTML-documents with full description of FLEX API
</ul>

<h2 id="options">OPTIONS</h2>
<div class="justify">
In general there are command line options and preferences editable in the <b>flexemu</b>
preferences dialog. Command line options supersede preferences and makes the
corresponding preferences together with its dependent preferences read-only.
</div>

<h3 id="options_linux_windows">Command line options on Linux and Windows</h3>
<div class="options-list">
<dl>
<dt>-f &lt;hexfile&gt;</dt>
<dd>
Specifies the name of a program read during startup, usually a system
monitor. Intel Hex, Motorola S-record and FLEX binary file format is supported.
The default is
<a href="neumon54.htm"><b>neumon54.hex</b></a>
The file will be looked for in the working directory or in the directory
specified as -p option or as Disk/Monitor directory.
Flexemu can be used with other monitor programs as long as they support the
special hardware needs of the Eurocom II/V7.
</dd>
<dt>-c &lt;color&gt;</dt>
<dd>
Specifies the foreground color. The default is
<b>green</b>. The background color is always black.
</dd>
<dt>-i</dt>
<dd>
Inverse video display (foreground and background colors exchanged).
</dd>
<dt>-p &lt;path&gt;</dt>
<dd>
Specifies a path in which disk image files or nafs-directories will be looked
for.<BR>Defaults:
<table class="invisible compact">
 <tr>
  <td>Windows:</td>
  <td>&lt;INSTDIR&gt;\data</td>
 </tr>
 <tr>
  <td>Linux:</td>
  <td>/usr/share/flexemu</td>
 </tr>
</table>
</dd>
<dt>-0|1|2|3 &lt;path&gt;</dt>
<dd>
Specifies a disk image file or a directory path for drive 0, 1, 2 or 3.
The default is
<b>system.dsk
</b>for drive 0. The file or directory will be looked for in the actual
directory.  If nothing is found the directory specified with the
<b>-p</b> option used for Disk/Monitor files will be looked for.
</dd>
<dt>-j &lt;screen_factor&gt;</dt>
<dd>
Specifies a factor to multiply the size of the flexemu video display. Default is <b>2</b>.
Valid values are 1, 2, 3, 4 and 5. It depends on the host screen size where flexemu is executed which <b>screen_factor</b> is supported.
</dd>
<dt>-u</dt>
<dd>
Enables the support of undocumented MC6809 Instructions. See Chapter
<a href="mc6809.htm#UndocumentedInstructions">Undocumented Instructions</a>
for details.
</dd>
<dt>-C &lt;startup_command&gt;</dt>
<dd>
When starting flexemu a startup command can be specified. Multiple commands
can be separated by the FLEX end-of-line character, which by default is a colon.
The emulator will be exited when specifying <b>exit</b> as the last
command.
Example: <b>"list&nbsp;0.termcon.txt:dir&nbsp;0:exit"</b> will print the file
contents of <b>0.termcon.txt</b>, make a directory listing of drive #0
and immediately exits the emulator. The startup command accepts a maximum of
128 characters.
</dd>
<dt>-m</dt>
<dd>
Use
<a href="e2hwdesc.htm#384KbRamExt">2 x 288 KByte RAM extension</a>.
Only for Eurocom II/V7.
</dd>
<dt>-F &lt;frequency&gt;</dt>
<dd>
Set frequency value in MHz. 0.0 runs CPU with maximum frequency. -1.0 runs CPU
with the original hardware frequency which is the default.
</dd>
<dt>-n &lt;number_of_colors&gt;</dt>
<dd>
Number of shades or colors. Default is <b>2</b>. Valid values are 2, 8 and 64.
</dd>
<dt>-O &lt;cccc&gt;</dt>
<dd>
Support formatting disk in drive 0..3 (Overwrite format). This option enables
or disables the write track command on the floppy disk controller.
c represents drive 0..3 in this order. All drives have to be specified. Only
file containers (not directory containers) support formatting a disk.
Supported values:
<p>
<table class="invisible compact">
 <tr>
  <td style="min-width: 2em">0</td><td>Do not allow to format drive.</td>
 </tr>
 <tr>
  <td>1</td><td>Allow to format drive.</td>
 </tr>
 <tr>
  <td>-</td><td>Keep drive unchanged.</td>
 </tr>
</table>
<p>
Only container files which do not have a valid file format are allowed to be formatted this way.<BR>
Example: <b>-O&nbsp;001-</b><BR>
Drive 2 allows format, drive 0 and 1 not, drive 3 is kept unchanged.
</dd>
<dt>-h</dt>
<dd>
Print a command line parameter description and exit.
</dd>
<dt>-v</dt>
<dd>
Print version number and exit.
</dd>
</dl>
</div>

<p><h3 id="options_linux">Command line options only on Linux</h3>
<div class="options-list">
<dl>
<dt>-t</dt>
<dd>
Terminal only mode. All input/output will be done on the terminal from
which flexemu is started. All Escape-Sequences of this terminal can be
accessed. Montior program <b>neumnt54.hex</b> is NOT needed for this any more.
<b>neumon54.hex</b> can be used for both terminal and GUI mode.
</dd>
<dt>-r &lt;two_hex_digits&gt;</dt>
<dd>
Define a reset key for terminal mode specified as two hex digits. The
default is
<code>1E</code>, means <kbd>Ctrl</kbd>+<kbd>^</kbd>.
</dd>
</dl>
</div>

<h3 id="preferences">Flexemu Preferences</h3>
<div class="justify">
In <b>flexemu</b> menu Edit-&gt;Preferences opens the preferences dialog.
The following preferences can be modified.
</div>
<p>
<table>
 <tr>
  <th rowspan="2">Name</th>
  <th rowspan="2">Description</th>
  <th colspan="2">Eurocom II</th>
  <th rowspan="2">Default</th>
 </tr>
 <tr>
  <th>V5</th>
  <th>V7</th>
 </tr>
 <tr>
  <th colspan="5">Emulated Hardware</td>
 </tr>
 <tr>
  <td>Emulated hardware</td>
  <td>flexemu can either emulate an Eurocom II/V5 or Eurocom II/V7.</td>
  <td></td>
  <td></td>
  <td>Eurocom II/V7</td>
 </tr>
 <tr>
  <td>CPU frequency</td>
  <td>
   The CPU frequency can be set to:
   <ul>
    <li>The original frequency of the emulated hardware, which is 1.3396 MHz.</li>
    <li>To be emulated as fast as possible.</li>
    <li>Set to a static frequency in the range of 0.1 ... 10000 MHz.</li>
   </ul>
  </td>
  <td><b>&check;</b></td>
  <td><b>&check;</b></td>
  <td>Original frequency</td>
 </tr>
 <tr>
  <td>MC146818 Realtime Clock</td>
  <td>
   Optionally emulate a
   <a href="e2hwdesc.htm#RealtimeClock">MC146818 real time clock</a>,
   which is a hardware extension.
  </td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>Emulate realtime clock</td>
 </tr>
 <tr>
  <th colspan="5">User Interface</td>
 </tr>
 <tr>
  <td>Screen size</td>
  <td>
   The screen size can be set to default, double, triple, quadruple or
   quintuple size.
  </td>
  <td><b>&check;</b></td>
  <td><b>&check;</b></td>
  <td>Double size (1024x512 pixel)</td>
 </tr>
 <tr>
  <td>Number of shades or colors</td>
  <td>
   Depending on the available RAM extension 2, 8 or 64 shades can be supported.
   Only if a RAM extension is selected, 8 or 64 shades are available.
  </td>
  <td>2/8/64<br><b>&check;</b>/<b>-</b>/<b>-</b></td>
  <td>2/8/64<br><b>&check;</b>/<b>&check;</b>/<b>&check;</b></td>
  <td>2</td>
 </tr>
 <tr>
  <td>Monochromatic color</td>
  <td>
   A monochromatic color like green or orange can be selected.
  </td>
  <td><b>&check;</b></td>
  <td><b>&check;</b></td>
  <td>green</td>
 </tr>
 <tr>
  <td>Multi color scheme</td>
  <td>
   Displaying multiple colors (not only shades of a monochromatic color).
   Only if 8 or 64 shades are selected.
  </td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>off</td>
 </tr>
 <tr>
  <td>Display Inverse</td>
  <td>Display video normal or inverse.</td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>off</td>
 </tr>
 <tr>
  <th colspan="5">Memory</td>
 </tr>
 <tr>
  <td>RAM extension</td>
  <td>
   <ul>
    <li><a href="e2hwdesc.htm#OnBoardMemory">No RAM extension</a>.</li>
    <li><a href="e2hwdesc.htm#96KbRamExt">2 x 96 KByte RAM extension</a>.</li>
    <li><a href="e2hwdesc.htm#384KbRamExt">2 x 288 KByte RAM extension</a>.</li>
   </ul>
  </td>
  <td><b>&check;<br><b>-</b><br><b>-</b></b></td>
  <td><b>&check;<br><b>&check;</b><br><b>&check;</b></b></td>
  <td>2 x 96 KByte</td>
 </tr>
 <tr>
  <th colspan="5">Files and Directories</td>
 </tr>
 <tr>
  <td>Disk/Monitor directory</td>
  <td>A Directory Path containing FLEX disks and monitor program.</td>
  <td><b>&check;</b></td>
  <td><b>&check;</b></td>
  <td>Windows: &lt;INSTDIR&gt;\data<BR>
  Linux: /usr/share/flexemu</td>
 </tr>
 <tr>
  <td>Monitor program</td>
  <td>A Filename or Directory Path for the monitor program.</td>
  <td><b>&check;</b></td>
  <td><b>&check;</b></td>
  <td><a href="neumon54.htm"><b>neumon54.hex</b></a></td>
 </tr>
 <tr>
  <td>Disk Drive 0</td>
  <td>A filename or directory Path for disk drive 0.</td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>system.dsk</td>
 </tr>
 <tr>
  <td>Disk Drive 1</td>
  <td>A filename or directory path for disk drive 1.</td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>Not set</td>
 </tr>
 <tr>
  <td>Disk Drive 2</td>
  <td>A filename or directory path for disk drive 2.</td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>Not set</td>
 </tr>
 <tr>
  <td>Disk Drive 3</td>
  <td>A filename or directory path for disk drive 3.</td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>Not set</td>
 </tr>
 <tr>
  <td>Cassette Drive 0</td>
  <td>A filename or directory path for cassette drive 0.</td>
  <td><b>&check;</b></td>
  <td><b>-</b></td>
  <td>system.mdcr</td>
 </tr>
 <tr>
  <td>Cassette Drive 1</td>
  <td>A filename or directory path for cassette drive 1.</td>
  <td><b>&check;</b></td>
  <td><b>-</b></td>
  <td>Not set</td>
 </tr>
 <tr>
  <th colspan="5">Terminal (Linux only)</td>
 </tr>
 <tr>
  <td>Ignore output of NUL (0x00) characters</td>
  <td>
			In terminal mode the output of NUL characters can be ignored. Their initial
			usage to wait until the teleprinter returns to the first printing position
			is not needed any more. There are terminals which incorrectly display it as
			a space. For details see:
			<a href="https://en.wikipedia.org/wiki/Null_character">
				Wikipedia Null character</a>. Some terminals also use NUL characters in
			escape sequences.
		</td>
  <td><b>&check;</b></td>
  <td><b>&check;</b></td>
  <td>on</td>
 </tr>
 <tr>
  <td>Ignore output of ESC (0x1B) characters</td>
  <td>
			In terminal mode the output of ESC characters can be ignored. This option
			has to be switched off, to send escape sequences to the terminal. When doing
			this it is recommended to change <a href="flexmem.htm#ttyesc">TTYESC</a>
			to a different character than ESC using
			<a href="flexuser.htm#ttyset">TTYSET DOS Utility</a>.
			This can avoid the terminal to stick in an escape sequence.
		</td>
  <td><b>&check;</b></td>
  <td><b>&check;</b></td>
  <td>on</td>
 </tr>
 <tr>
  <th colspan="5">Expert Preferences</td>
 </tr>
 <tr>
  <td>Undocumented instructions</td>
  <td>
   Optionally emulate MC6809 with
   <a href="mc6809.htm#UndocumentedInstructions">undocumented instructions</a>.
  </td>
  <td><b>&check;</b></td>
  <td><b>&check;</b></td>
  <td>off</td>
 </tr>
 <tr>
  <td>More flexible MMU</td>
  <td>
   Optionally emulate a
    <a href="e2hwdesc.htm#FlexibleMMU">more flexible MMU</a>. Only if
    <a href="e2hwdesc.htm#384KbRamExt">2 x 288 KByte RAM extension</a> is
     selected.
  </td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>off</td>
 </tr>
 <tr>
  <td>Enable formatting disk in drive 0</td>
  <td>
   <table class="invisible">
    <tr>
     <td>
      This option enables or disables the write track command on the floppy
      disk controller for drive 0.
     </td>
     <td>[1]</td>
    </tr>
   </table>
  </td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>off</td>
 </tr>
 <tr>
  <td>Enable formatting disk in drive 1</td>
  <td>
   <table class="invisible">
    <tr>
     <td>
      This option enables or disables the write track command on the floppy
      disk controller for drive 1.
     </td>
     <td>[1]</td>
    </tr>
   </table>
  </td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>off</td>
 </tr>
 <tr>
  <td>Enable formatting disk in drive 2</td>
  <td>
   <table class="invisible">
    <tr>
     <td>
      This option enables or disables the write track command on the floppy
      disk controller for drive 2.
     </td>
     <td>[1]</td>
    </tr>
   </table>
  </td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>off</td>
 </tr>
 <tr>
  <td>Enable formatting disk in drive 3</td>
  <td>
   <table class="invisible">
    <tr>
     <td>
      This option enables or disables the write track command on the floppy
      disk controller for drive 3.
     </td>
     <td>[1]</td>
    </tr>
   </table>
  </td>
  <td><b>-</b></td>
  <td><b>&check;</b></td>
  <td>off</td>
 </tr>
</table>
<p>
[1] When this option is enabled a floppy disk can be formatted from within the
emulator. Only file containers (not directory containers) support formatting a
disk. When this option is on, the corresponding file container can be an empty
non existent file. NEWDISK.CMD distributed on system.dsk for example can be
used to format a disk.
<p>

<h3 id="breakpoints">Breakpoint support</h3>
<div class="justify">
With the menu CPU-&gt;Breakpoints up to two breakpoints
can be set. They have to be input as a one to four digit hexadecimal
address. Execution automatically stops when the PC register contains one
of the breakpoint addresses.
</div>

<h3 id="logging">CPU Instruction Logging</h3>
<div class="justify">
With the menu CPU-&gt;Logging the logging of each executed CPU
instruction can be enabled. The Instruction Logging Dialog contains
the following entry fields. Addresses have to be input as a one to 
four digit hexadecimal address:
</div>
<p>
<table>
 <tr>
  <th>Fieldname</th>
  <th>Default value</th>
  <th>Description</th>
 </tr>
 <tr>
  <td>Min Address</td>
  <td>0000</td>
  <td>Only log instructions on an address higher or equal to this address.</td>
 </tr>
 <tr>
  <td>Max Address</td>
  <td>FFFF</td>
  <td>Only log instructions on an address lower or equal to this address.</td>
 </tr>
 <tr>
  <td>Start Address</td>
  <td>&lt;not set&gt;</td>
  <td>
    Start Instruction logging when the value of the PC
    is equal to the Start Address.
  </td>
 </tr>
 <tr>
  <td>Stop Address</td>
  <td>&lt;not set&gt;</td>
  <td>
    Stop Instruction logging when the value of the PC is equal to the Stop
    Address.
  </td>
 </tr>
 <tr>
  <td>Log cycle count</td>
  <td>off</td>
  <td>
    Log the number of cycles the CPU executed since the last reset.
  </td>
 </tr>
 <tr>
  <td>Log register values</td>
  <td>all off</td>
  <td>
    Log a combination of CPU register values. The PC address is always logged.
    Register values are logged before executing the instruction on the current
    PC address.
  </td>
 </tr>
 <tr>
  <td>Filename</td>
  <td>&lt;not set&gt;</td>
  <td>
    Filename to be used for the instruction logging. Independant of the Start
    and Stop Address this file remains open as long as Flexemu keeps running
    until another Filename is set. An empty filename finishes Instruction
    logging.
  </td>
 </tr>
</table>

<h3 id="frequency_control">CPU Frequency control</h3>
<div class="justify">
With the toggle menu item "CPU-&gt;Original&nbsp;Frequency" 1.3396 MHz the CPU
frequency can be switched between the maximum possible frequency 
(depending on the available host CPU performance) and the original
CPU frequency which exactly is 1.3396 MHz. With the command <b>emu freq</b>
other frequencies can be specified. See
<a href="flexutil.htm">FLEX Utilities</a> for details.
</div>

<h2 id="keyboard">KEYBOARD</h2>
<h3 id="keyboard_pat09">Eurocom PAT09 keyboard</h3>
<div class="justify">
The Eurocom II/V7 typically was shipped with a PAT09 keyboard:
</div>
<p>
<img src="images/pat09_keyboard.png" alt="PAT09 keyboard"
 title="PAT09 keyboard" width="1024" />
<p>
<div class="justify">
PAT09 can emit the whole ASCII character set (hex code <code>00</code> ..
<code>7F</code>) together with some additional keys codes
(hex code &gt; <code>7F</code>). flexemu emulates almost all keys available on
PAT09 as discribed in the following chapters. Eurocom II/V5 strips off the
most significant bit from the keyboard input with the concequence of only
supporting the ASCII character set.
</div>

<h3 id="hotkeys">Hotkeys</h3>
<div class="justify">
The following table shows the hotkeys available in flexemu.
</div>
<p>
<table>
 <tr>
  <th>Hotkey</th>
  <th>Description</th>
 </tr>
 <tr>
  <td><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Q</kbd></td>
  <td>Exit application</td>
 </tr>
 <tr>
  <td><kbd>Ctrl</kbd>+<kbd>1</kbd></td>
  <td>Set default screen size</td>
 </tr>
 <tr>
  <td><kbd>Ctrl</kbd>+<kbd>2</kbd></td>
  <td>Set double screen size</td>
 </tr>
 <tr>
  <td><kbd>Ctrl</kbd>+<kbd>3</kbd></td>
  <td>Set triple screen size</td>
 </tr>
 <tr>
  <td><kbd>Ctrl</kbd>+<kbd>4</kbd></td>
  <td>Set quadruple screen size</td>
 </tr>
 <tr>
  <td><kbd>Ctrl</kbd>+<kbd>5</kbd></td>
  <td>Set quintuple screen size</td>
 </tr>
 <tr>
  <td><kbd>Ctrl</kbd>+<kbd>F12</kbd></td>
  <td>Toggle smooth display</td>
 </tr>
 <tr>
  <td><kbd>Pause</kbd></td>
  <td>Toggle CPU to stop or run</td>
 </tr>
 <tr>
  <td><kbd>Shift</kbd>+<kbd>Pause</kbd></td>
  <td>Send non maskable interrupt (NMI) to CPU</td>
 </tr>
 <tr>
  <td><kbd>Shift</kbd>+<kbd>Alt</kbd>+<kbd>Pause</kbd></td>
  <td>Reset and run CPU</td>
 </tr>
</table>
<p>
<div class="justify">
There is also a hotkey for toggling full screen and window mode. It depends on
the user interface.
</div>
<p>
<table>
 <tr>
  <th>User Interface</th>
  <th>Hotkeys</th>
 </tr>
 <tr>
  <td>Windows</td>
  <td><kbd>F11</kbd> or <kbd>Alt</kbd>+<kbd>Enter</kbd></td>
 </tr>
 <tr>
  <td>macOS</td>
  <td><kbd>Ctrl</kbd>+<kbd>Meta</kbd>+<kbd>F</kbd></td>
 </tr>
 <tr>
  <td>KDE</td>
  <td><kbd>F11</kbd> or <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>F</kbd></td>
 </tr>
 <tr>
  <td>GNOME</td>
  <td><kbd>Ctrl</kbd>+<kbd>F11</kbd></td>
 </tr>
 <tr>
  <td>Others</td>
  <td><kbd>F11</kbd></td>
 </tr>
</table>

<h3 id="function_keys">Function keys</h3>
<div class="justify">
All PAT09 function keys <kbd>F1</kbd> up to <kbd>F19</kbd> are emulated as
defined in the following table:
</div>
<p>
<table>
 <tr>
  <th>PAT09 key</th>
  <th>Mapped key</th>
  <th>Emitted hex code</th>
 </tr>
 <tr>
  <td><kbd>F1</kbd></td>
  <td><kbd>F1</kbd></td>
  <td><code>C0</code></td>
 </tr>
 <tr>
  <td><kbd>F2</kbd></td>
  <td><kbd>F2</kbd></td>
  <td><code>C1</code></td>
 </tr>
 <tr>
  <td><kbd>F3</kbd></td>
  <td><kbd>F3</kbd></td>
  <td><code>C2</code></td>
 </tr>
 <tr>
  <td><kbd>F4</kbd></td>
  <td><kbd>F4</kbd></td>
  <td><code>C3</code></td>
 </tr>
 <tr>
  <td><kbd>F5</kbd></td>
  <td><kbd>F5</kbd></td>
  <td><code>C4</code></td>
 </tr>
 <tr>
  <td><kbd>F6</kbd></td>
  <td><kbd>F6</kbd></td>
  <td><code>C5</code></td>
 </tr>
 <tr>
  <td><kbd>F7</kbd></td>
  <td><kbd>F7</kbd></td>
  <td><code>C6</code></td>
 </tr>
 <tr>
  <td><kbd>F8</kbd></td>
  <td><kbd>F8</kbd></td>
  <td><code>C7</code></td>
 </tr>
 <tr>
  <td><kbd>F9</kbd></td>
  <td><kbd>F9</kbd></td>
  <td><code>C8</code></td>
 </tr>
 <tr>
  <td><kbd>F10</kbd></td>
  <td><kbd>F10</kbd></td>
  <td><code>C9</code></td>
 </tr>
 <tr>
  <td><kbd>F11</kbd></td>
  <td><kbd>Shift</kbd>+<kbd>F1</kbd></td>
  <td><code>CA</code></td>
 </tr>
 <tr>
  <td><kbd>F12</kbd></td>
  <td><kbd>Shift</kbd>+<kbd>F2</kbd></td>
  <td><code>CB</code></td>
 </tr>
 <tr>
  <td><kbd>F13</kbd></td>
  <td><kbd>Shift</kbd>+<kbd>F3</kbd></td>
  <td><code>CC</code></td>
 </tr>
 <tr>
  <td><kbd>F14</kbd></td>
  <td><kbd>Shift</kbd>+<kbd>F4</kbd></td>
  <td><code>CD</code></td>
 </tr>
 <tr>
  <td><kbd>F15</kbd></td>
  <td><kbd>Shift</kbd>+<kbd>F5</kbd></td>
  <td><code>CE</code></td>
 </tr>
 <tr>
  <td><kbd>F16</kbd></td>
  <td><kbd>Shift</kbd>+<kbd>F6</kbd></td>
  <td><code>CF</code></td>
 </tr>
 <tr>
  <td><kbd>F17</kbd></td>
  <td><kbd>Shift</kbd>+<kbd>F7</kbd></td>
  <td><code>D0</code></td>
 </tr>
 <tr>
  <td><kbd>F18</kbd></td>
  <td><kbd>Shift</kbd>+<kbd>F8</kbd></td>
  <td><code>D1</code></td>
 </tr>
 <tr>
  <td><kbd>F19</kbd></td>
  <td><kbd>Shift</kbd>+<kbd>F9</kbd></td>
  <td><code>D2</code></td>
 </tr>
</table>

<h4 id="ascii_control_characters">ASCII control characters</h4>
<div class="justify">
All ASCII control characters with hex code <code>00</code> up to
<code>1F</code> and <code>7F</code> can be entered with flexemu:
</div>
<p>
<table>
 <tr>
  <th>key combination</th>
  <th>Control character</th>
  <th>hex code</th>
 </tr>
 <tr>
  <td>
   <span class=left><kbd>Ctrl</kbd>+<kbd>@</kbd> or <kbd>Ctrl</kbd>+<kbd>`</kbd></span>
   <span class=right>[1]</span>
  </td>
  <td><code>NUL</code></td>
  <td><code>00</code></td>
 </tr>
 <tr>
  <td><kbd>Ctrl</kbd>+<kbd>A</kbd> ... <kbd>Ctrl</kbd>+<kbd>Z</kbd></td>
  <td><code>SOH</code> ... <code>SUB</code></td>
  <td><code>01</code> ... <code>1A</code></td>
 </tr>
 <tr>
  <td>
   <span class=left><kbd>ESC</kbd> or <kbd>Ctrl</kbd>+<kbd>[</kbd> or <kbd>Ctrl</kbd>+<kbd>{</kbd></span>
   &nbsp;&nbsp;&nbsp;
   <span class=right>[1]</span>
  </td>
  <td><code>ESC</code></td>
  <td><code>1B</code></td>
 </tr>
 <tr>
  <td>
   <span class=left><kbd>Ctrl</kbd>+<kbd>\</kbd> or <kbd>Ctrl</kbd>+<kbd>|</kbd></span>
   <span class=right>[1]</span>
  </td>
  <td><code>FS</code></td>
  <td><code>1C</code></td>
 </tr>
 <tr>
  <td>
   <span class=left><kbd>Ctrl</kbd>+<kbd>]</kbd> or <kbd>Ctrl</kbd>+<kbd>}</kbd></span>
   <span class=right>[1]</span>
  </td>
  <td><code>GS</code></td>
  <td><code>1D</code></td>
 </tr>
 <tr>
  <td>
   <span class=left><kbd>Ctrl</kbd>+<kbd>^</kbd> or <kbd>Ctrl</kbd>+<kbd>~</kbd></span>
   <span class=right>[1]</span>
  </td>
  <td><code>RS</code></td>
  <td><code>1E</code></td>
 </tr>
 <tr>
  <td>
   <span class=left><kbd>Ctrl</kbd>+<kbd>_</kbd> or <kbd>Ctrl</kbd>+<kbd>Delete</kbd></span>
   <span class=right>[1]</span>
  </td>
  <td><code>US</code></td>
  <td><code>1F</code></td>
 </tr>
 <tr>
  <td>
   <span class=left><kbd>Delete</kbd></span>
   <span class=right>[2]</span>
  </td>
  <td><code>DEL</code></td>
  <td><code>7F</code></td>
 </tr>
</table>
<p>
[1] Depending on the keyboard layout evtl. also <kbd>Alt Gr</kbd> has to be pressed.
<p>
[2] Works only for the <kbd>Delete</kbd> key located on the main keypad.
<p>

<h4 id="numeric_keypad_cursor_control">Numeric Keypad and Cursor Control</h4>
<div class="justify">
On a standarized keyboard a separate numeric keypad can be used for both
entering numbers (<kbd>Num Lock</kbd> is switched on) or cursor control
characters (<kbd>Num Lock</kbd> is switched off).
The Eurocom II
PAT09 keyboard has both a separate cursor control keypad and numeric keypad:
</div>
<p>
<table class="invisible">
 <tr>
  <td>
    <img src="images/pat09_cursorpad.png" alt="PAT09 cursor pad"
     title="PAT09 cursor pad" width="138" />
  </td>
  <td>
    <img src="images/pat09_numpad.png" alt="PAT09 numpad"
     title="PAT09 numpad" width="138" />
  </td>
</table>
<p>
On flexemu both keypads are emulated using the numeric keypad:
<p>
<div class="justify">
If <kbd>Num Lock</kbd> is switched on all keys of the PAT09 numeric keypad
are emulated one by one. Depending on the current locale setting the decimal
point character can be a comma or period. flexemu
always maps this to a period because it is not locale aware.
</div>
<p>
<div class="justify">
If <kbd>Num Lock</kbd> is switched off the cursor control keys of the PAT09
keyboard are mapped to a standardized keyboard on the numeric keypad.
The following hex codes can be generated.
</div>
<p>
<table>
 <tr>
  <th rowspan="2">PAT09 key</th>
  <th rowspan="2">Mapped key</th>
  <th colspan="4">Emitted hex code</th>
 </tr>
 <tr>
  <th><kbd>&lt;key&gt;</kbd></th>
  <th><kbd>Shift</kbd>+<kbd>&lt;key&gt;</kbd></th>
  <th><kbd>Ctrl</kbd>+<kbd>&lt;key&gt;</kbd></th>
  <th><kbd>Shift</kbd>+<kbd>Ctrl</kbd>+<kbd>&lt;key&gt;</kbd></th>
 </tr>
 <tr>
  <td><img src="images/pat09_key_thick_left_arrow.png" alt="Thick left arrow" width="48" /></td>
  <td><kbd>Pos1</kbd></td>
  <td><code>F1</code></td>
  <td><code>E1</code></td>
  <td><code>B1</code></td>
  <td><code>A1</code></td>
 </tr>
 <tr>
  <td><img src="images/pat09_key_down_arrow.png" alt="Down arrow" width="48" /></td>
  <td><kbd>&#8595;</kbd></td> <!-- cursor down -->
  <td><code>F2</code></td>
  <td><code>E2</code></td>
  <td><code>B2</code></td>
  <td><code>A2</code></td>
 </tr>
 <tr>
  <td><img src="images/pat09_key_thick_lower_right_arrow.png" alt="Thick lower right arrow" width="48" /></td>
  <td><kbd>Page Down</kbd></td>
  <td><code>F3</code></td>
  <td><code>E3</code></td>
  <td><code>B3</code></td>
  <td><code>A3</code></td>
 </tr>
 <tr>
  <td><img src="images/pat09_key_left_arrow.png" alt="Left arrow" width="48" /></td>
  <td><kbd>&#8592;</kbd></td> <!-- cursor left -->
  <td><code>F4</code></td>
  <td><code>E4</code></td>
  <td><code>B4</code></td>
  <td><code>A4</code></td>
 </tr>
 <tr>
  <td><img src="images/pat09_key_mode.png" alt="Mode" width="48" /></td>
  <td><kbd>Clear</kbd></td>
  <td><code>F5</code></td>
  <td><code>E5</code></td>
  <td><code>B5</code></td>
  <td><code>A5</code></td>
 </tr>
 <tr>
  <td><img src="images/pat09_key_right_arrow.png" alt="Right arrow" width="48" /></td>
  <td><kbd>&#8594;</kbd></td> <!-- cursor right -->
  <td><code>F6</code></td>
  <td><code>E6</code></td>
  <td><code>B6</code></td>
  <td><code>A6</code></td>
 </tr>
 <tr>
  <td><img src="images/pat09_key_thick_upper_left_arrow.png" alt="Thick upper left arrow" width="48" /></td>
  <td><kbd>Page Up</kbd></td>
  <td><code>F7</code></td>
  <td><code>E7</code></td>
  <td><code>B7</code></td>
  <td><code>A7</code></td>
 </tr>
 <tr>
  <td><img src="images/pat09_key_up_arrow.png" alt="Up arrow" width="48" /></td>
  <td><kbd>&#8593;</kbd></td> <!-- cursor up -->
  <td><code>F8</code></td>
  <td><code>E8</code></td>
  <td><code>B8</code></td>
  <td><code>A8</code></td>
 </tr>
 <tr>
  <td><img src="images/pat09_key_thick_right_arrow.png" alt="Thick right arrow" width="48" /></td>
  <td><kbd>End</kbd></td>
  <td><code>F9</code></td>
  <td><code>E9</code></td>
  <td><code>B9</code></td>
  <td><code>A9</code></td>
 </tr>
 <tr>
  <td><img src="images/pat09_key_left_limit.png" alt="Left limit" width="64" /></td>
  <td>
   <span class=left><kbd>Insert</kbd></span>
   &nbsp;&nbsp;&nbsp;
   <span class=right>[1]</span>
  </td>
  <td><code>FA</code></td>
  <td><code>EA</code></td>
  <td><code>FA</code></td>
  <td><code>EA</code></td>
 </tr>
 <tr>
  <td><img src="images/pat09_key_right_limit.png" alt="Right limit" width="64" /></td>
  <td>
   <span class=left><kbd>Delete</kbd></span>
   <span class=right>[2]</span>
  </td>
  <td><code>91</code></td>
  <td><code>81</code></td>
  <td><code>91</code></td>
  <td><code>81</code></td>
 </tr>
</table>
<p>
<div class="justify">
[1] The <kbd>Insert</kbd> key located on the main keypad does not emit
any hex code.
</div>
<p>
<div class="justify">
[2] The <kbd>Delete</kbd> key located on the main keypad emits hex code
<code>7F</code>,
<kbd>Ctrl</kbd>+<kbd>Delete</kbd> key emits key code <code>1F</code>.
</div>

<h2 id="see_also">SEE ALSO</h2>
<ul>
 <li><a href="flexuser.htm"> FLEX Users Manual</a>
 <li><a href="flexutil.htm"> Misc FLEX Utilities</a>
 <li><a href="flexdos.htm"> FLEX Disk Operating System (DOS)</a>
 <li><a href="flexfms.htm"> FLEX File Management System (FMS)</a>
 <li><a href="flexfs.htm"> File systems supported by flexemu</a>
 <li><a href="flexerr.htm"> FLEX Error Messages</a>
 <li><a href="flexfcb.htm"> FLEX File Control Block (FCB)</a>
 <li><a href="flexmem.htm"> FLEX Memory Map</a>
 <li><a href="neumon54.htm"> Monitor program neumon54.hex</a>
 <li><a href="mon24.htm"> Monitor program mon24.s19</a>
 <li><a href="e2hwdesc.htm"> Eurocom II hardware description</a>
 <li><a href="mc6809.htm"> Motorola MC6809</a>
</ul>

<h2 id="documents_flex_user_group">Documents on the behalf of the FLEX User Group</h2>
<ul>
 <li><a href="flex2um.pdf" target="_blank">FLEX User's Manual</a>
 <li><a href="swflexum.pdf" target="_blank">FLEX User's Manual (2)</a>
 <li><a href="flexapg.pdf" target="_blank">FLEX Programmer's Manual</a>
 <li><a href="6809fadg.pdf" target="_blank">6809 FLEX Adaption Guide</a>
 <li><a href="tedit.pdf" target="_blank">FLEX Editor</a>
 <li><a href="relasmb.pdf" target="_blank">FLEX 6809 Relocating Assembler</a>
 <li><a href="asmb.pdf" target="_blank">FLEX Assembler</a>
 <li><a href="linkload.pdf" target="_blank">FLEX Linking Loader</a>
 <li><a href="crasmb.pdf" target="_blank">Lloyd Macro Cross Assembler</a>
 <li><a href="6809diag.pdf" target="_blank">6809 FLEX Diagnostics</a>
 <li><a href="debug.pdf" target="_blank">6809 Debug Package</a>
 <li><a href="dynamite.pdf" target="_blank">DYNAMITE Disassembler User's Manual</a>
 <li><a href="basic_um.pdf" target="_blank">BASIC Users Manual</a>
 <li><a href="ba2bqs.pdf" target="_blank">BASIC Answers to BASIC Questions</a>
 <li><a href="basprec.pdf" target="_blank">BASIC Precompiler User's Manual</a>
 <li><a href="f77.pdf" target="_blank">Fortan 77</a>
 <li><a href="util_man.pdf" target="_blank">Windrush FLEX Utilities Package</a>
</ul>

<h2 id="related_links">Related Links</h2>
<ul>
 <li><a href="http://flexemu.neocities.org">Flexemu Homepage</a>
</ul>

<h2 id="bugs">BUGS</h2>
<div class="justify">
If a drive can not be logged in no error message will be displayed.
If a directory will be logged in as a drive and it has too much files or its
filesize all together is too large no error message will be displayed and
as much files as possible will be managed.
emu commands (See <a href="flexutil.htm">FLEX Utilities</a> for details)
only have poor error messages.
</div>
</body>
</html>
