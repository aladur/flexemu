<!DOCTYPE HTML>
<html lang="en">
<head>
<meta charset="UTF-8">
<link href='https://fonts.googleapis.com/css?family=Courier%20Prime' rel='stylesheet'>
<link rel="stylesheet" href="flexemu.css">
<title>File systems supported by flexemu</title>
</head>
<body>
<h1>flexfs - File systems supported by flexemu</h1>
<hr>

<h2>DESCRIPTION</h2>
Flexemu supports three different file systems to be used as disk drive:
<p>
<ul>
 <li><a href="#dsk_format">DSK Disk image files</a>
 <li><a href="#flx_format">FLX Disk image files</a>
 <li><a href="#nafs_format">Vitual disk images</a>
</ul>
<div class="options-list">
<dl>
<dt id="dsk_format">DSK Disk image files
<dd>
DSK disk image files (with file extension *.DSK or *.WTA) are commonly used by
emulators running the TSC FLEX operating system, see:
<a href="http://ourtimelines.com/reflex/tocpage.html">
 ReFLEX</a> by Ben Williams,
<a href="http://www.evenson-consulting.com/swtpc/">
 SWTPC 6800/6809 Emulator</a> by Evenson Consulting Services or
<a href="https://github.com/nealcrook/multicomp6809">
 6809 FPGA design</a> by Neal Crook.
Also FLEX software archives use DSK disk image files, see:
<a href="http://www.flexusergroup.com/flexusergroup/fug1.htm">
 FLEX User Group</a> by Ian P. Blythe or
<a href="https://www.simonwynn.com/flex">
 FLEX Software Archive</a> by Simon Wynn Consulting.<p>
A *.DSK file contains all sectors of a disk. A wide range of track/sector
combinations is supported.
Following table shows typical used disk formats:
<p>
<table>
 <tr><th>Disk size<br>[inch]</th><th>Sides</th><th>Density<br>*)</th><th>Tracks</th><th>Sectors</th><th>File size<br>[KByte]</th>
 <tr><td>5 1/4</td><td>1</td><td>SD</td><td>35</td><td>10</td><td>87.5</td>
 <tr><td>5 1/4</td><td>2</td><td>SD</td><td>35</td><td>20</td><td>175</td>
 <tr><td>5 1/4</td><td>1</td><td>SD</td><td>40</td><td>10</td><td>100</td>
 <tr><td>5 1/4</td><td>1</td><td>DD</td><td>40</td><td>18</td><td>180</td>
 <tr><td>5 1/4</td><td>2</td><td>SD</td><td>40</td><td>20</td><td>200</td>
 <tr><td>5 1/4</td><td>2</td><td>DD</td><td>40</td><td>36</td><td>360</td>
 <tr><td>5 1/4</td><td>1</td><td>DD</td><td>80</td><td>18</td><td>360</td>
 <tr><td>5 1/4</td><td>2</td><td>SD</td><td>80</td><td>20</td><td>400</td>
 <tr><td>5 1/4</td><td>2</td><td>DD</td><td>80</td><td>36</td><td>720</td>
 <tr><td>5 1/4</td><td>2</td><td>QD</td><td>80</td><td>72</td><td>1440</td>
 <tr><td>8</td><td>1</td><td>SD</td><td>77</td><td>15</td><td>288.75</td>
 <tr><td>8</td><td>1</td><td>DD</td><td>77</td><td>26</td><td>500.5</td>
 <tr><td>8</td><td>2</td><td>SD</td><td>77</td><td>30</td><td>577.5</td>
 <tr><td>8</td><td>2</td><td>DD</td><td>77</td><td>52</td><td>1001</td>
 <tr><td>**)</td><td>-</td><td>-</td><td>255</td><td>255</td><td>16256.25</td>
 <tr><td>**)</td><td>-</td><td>-</td><td>256</td><td>255</td><td>16320</td>
</table>
<p>
*) SD = single density, DS = double density, QD = quad density<br>
**) Harddisk<p>
The sector size is always 256 Byte. The size of the
file can simply be computed with &lt;nr_of_tracks&gt; * &lt;nr_of_sectors&gt; *
256 Byte. If the DSK-file is write protected the drive within flexemu is write
protected too.<p>
Optionally a
<a href="https://sites.google.com/site/dabarnstudio/coco-utilities/jvc-disk-format">JVC file header</a> is supported. The header can contain 1 up to 5 bytes.
flexemu supports the following JVC header values:
<p>
<table>
 <tr><th>Byte offset</th><th>Description</th><th>Default</th><th>Supported<br>values</th>
 <tr><td>0</td><td>Sectors per track</td><td>-</td><td>5-255</td>
 <tr><td>1</td><td>Side count</td><td>1</td><td>1,2</td>
 <tr><td>2</td><td>Sector size code</td><td>1 *)</td><td>1</td>
 <tr><td>3</td><td>First sector ID</td><td>1 **)</td><td>1</td>
 <tr><td>4</td><td>Sector attr. flag</td><td>0 ***)</td><td>0</td>
</table>
<p>
*) A sector size code of 1 means a sector size of 256 Byte<br>
**) For FLEX compatibility the first sector ID always should be 1<br>
***) Sector attribute flag should be 0 (A sector attribute byte is unsupported)<br>
</dd>
<dt id="flx_format">FLX Disk image files
<dd>
FLX disk image files (with file extension *.FLX) have the same structure as a
*.DSK file with an additional 16-byte header at the beginning of the file. The
header describes the disk format:
<p>
<table>
 <tr><th>bytes</th><th>name</th><th>description</th>
 <tr><td>4</td><td>magic_number</td><td>always 0x485C9A33</td>
 <tr><td>1</td><td>write_protect</td><td>flag for write protection</td>
 <tr><td>1</td><td>size code</td><td>128 * 2 ^ n Bytes/sector</td>
 <tr><td>1</td><td>sides0</td><td>nr of sides on track 0</td>
 <tr><td>1</td><td>sectors0</td><td>nr of sect. on track 0</td>
 <tr><td>1</td><td>sides</td><td>nr of sides on track != 0</td>
 <tr><td>1</td><td>sectors</td><td>nr of sect. on track != 0</td>
 <tr><td>1</td><td>tracks</td><td>nr of tracks total</td>
 <tr><td>5</td><td>dummy1 - dummy 5</td><td>for stuffing</td>
</table>
<p>
The header allows to have a different number of sectors on track 0 as on other
tracks. For the actual format look at
<a href="https://github.com/aladur/flexemu/blob/899653f1e8dcfc722a803567fb90828f606a2811/src/filecnts.h#L265">struct s_flex_header</a>.
</dd>
<dt id="nafs_format">Virtual disk images</dt>
<dd>
A vitual disk image is a directory on the host file system which will be
mapped as a disk drive within the emulation. So it also could be called a
<i>directory disk</i>.
Each file in the directory will be visible as a file contained on the disk.
<p>
The boot sector (on track 0, sector 1 and optionally sector 2) is contained in
the file <b>boot</b>. If there is no such file the disk can't be booted. The
link to FLEX.SYS will be generated dynamically by flexemu. The user does not
have to care about it.
<p>
<dl>
<dt id="nafs_format_random">Random files on virtual disks</dt>
<dd>
The detection of random files on a virtual disk depends on the flexemu version.
The following table gives a detailed description of how random files are
identified. It is used by flexemu and flexplorer.
<p>
<table>
 <tr><th>Version</th><th>Random file detection</th>
 <tr><td>&lt; V3.22</td><td>
On a read-write directory disk random files are identified by the user execute
attribute set (UNIX) or the hidden attribute set (Windows). On a read-only
filesystem like a CDFS these attributes may not be available.
So for any read-only directory disk a file <i>random</i> can be created
containing the lowercase filenames of all random files.
  </td>
 <tr><td>V3.22</td><td>
The bahaviour is the same as in older versions. Additionaly, to avoid
crashes in flexemu in addition to the file attributes a file only is
detected as random file if it has a size of three sectors minimum. FLEX does
not support random files with one or two sectors. In addition the sector map
of a random file is verified and has to be valid.
 </td>
 <tr><td>&GreaterEqual; V3.25</td><td>
The detection of random files used in older flexemu versions has some
downsides. It depends on file system capabilities, is a kind of misuse of
filesystem attributes and error phrone. For this reason a completly new
strategy is introduced.<br><br>
To decide which strategy to use the following checks are done in this order:
<br><br>
 <ul>
  <li>File <i>.random</i> exists =&gt; Use <b>strategy A</b>
  <li>File <i>random</i> exists =&gt; Use <b>strategy B</b>
  <li>A file with user execute attribute set (UNIX) or hidden attribute set
   (Windows) exists =&gt; Use <b>strategy C</b>
 </ul><br>
 <dl>
 <dt>Strategy A</dt>
 <dd>Files listed in file <i>.random</i> are identified as random files. A
 check is executed if the file exists and has the minimum size of a random
 file which is three sectors. This <i>.random</i> file is automatically
 updated when creating a new, deleting or renaming an existing random file.
 The files listed in file <i>.random</i> are always sorted alphabetically
 with lowercase filenames. If it can not be written the whole disk is marked
 as read-only. This is the preferred strategy.
 </dd>
 <dt>Strategy B</dt>
 <dd>This strategy only exists for downward compatibility.<br>
 Files listed in file <i>random</i> are identified as random files.
 A check is executed if the file exists and has the minimum size of a random
 file which is three sectors. The files listed in file <i>random</i> are
 unsorted with lowercase filename. When creating a new, deleting or renaming
 an existing random file the updated random file list is written to the file
 <i>.random</i> while deleting file <i>random</i>. The files listed in file
 <i>.random</i> are always sorted alphabetically with lowercase filenames.
 If either file <i>random</i> or <i>.random</i> can not be written the whole
 disk is marked as read-only.
 </dd>
 <dt>Strategy C</dt>
 <dd>This strategy only exists for downward compatibility.<br>
 A file with user execute attribute (UNIX) or the hidden attribute
 (Windows) set is identified as random file if it has the minimum size of a
 random file which is three sectors and also has a valid sector map. When
 creating a new, deleting or renaming an existing random file the updated
 random file list is written to the file <i>.random</i>. The files listed in
 file <i>.random</i> are always sorted alphabetically with lowercase
 filenames. If it can not be written the whole disk is marked as read-only.
 </dd>
 </dl>
 <br>
 In flexplorer and dsktool also the directories used for injecting or
 extracting files a file <i>.random</i> is created and updated to support
 random file detection in these directories.
 </td>
</table>
<p>

<dt id="nafs_format_restrictions">Restrictions</dt>
<dd>There are some restrictions the user should be aware of:
<p>
<ul>
 <li>When first time mounting a virtual disk image the track and sector count
  is used from the flexemu preferences. The number of tracks and sectors are
  stored in the disk directory
  in file .flexdiskrc to be reused when mounting again. If the size
  of all files in the directory won't fit to the virtual disk image size some
  of them are silently ignored. A read-only directory always uses the default
  track and sector count as defined in the flexemu preferences.
 <li>All filenames must conform to FLEX file naming conventions otherwise
  they are silently ignored.
 <li>A virtual disk image is only accessible using FMS calls. Direct
  reading/writing sectors is not supported an may result in undefined behaviour.
 <li>New files have a name tmpXX (XX = two digit number) and are
  renamed to their real name after closing them within the emulation.
 <li>If the directory of a virtual disk image drive is full it will
  automatically be extended. So no directory extend utility should be used.
 <li>During emulation modifying files on the host is not supported and may
  result in undefined behaviour.
</ul>
<p>
</dd>
</dl>
</dl>
</div>

<h2>SEE ALSO</h2>
<ul>
 <li><a href="flexemu.htm"> flexemu Main</a>
 <li><a href="flexuser.htm"> FLEX Users Manual</a>
 <li><a href="flexutil.htm"> Misc FLEX Utilities</a>
 <li><a href="flexdos.htm"> FLEX Disk Operating System (DOS)</a>
 <li><a href="flexfms.htm"> FLEX File Management System (FMS)</a>
 <li><a href="flexerr.htm"> FLEX Error Messages</a>
 <li><a href="flexfcb.htm"> FLEX File Control Block (FCB)</a>
 <li><a href="flexmem.htm"> FLEX Memory Map</a>
 <li><a href="neumon54.htm"> Monitor program neumon54.hex</a>
 <li><a href="mon53_54.htm"> Monitor program mon53.s19 and mon54.s19</a>
 <li><a href="monu54.htm"> Monitor program monu54-6.s19</a>
 <li><a href="mon24.htm"> Monitor program mon24.s19</a>
 <li><a href="e2hwdesc.htm"> Eurocom II hardware description</a>
 <li><a href="mc6809.htm"> Motorola MC6809</a>
</ul>

<h2>Documents on the behalf of the FLEX User Group</h2>
<ul>
 <li><a href="flex2um.pdf" target="_blank">FLEX User's Manual</a>
 <li><a href="swflexum.pdf" target="_blank">FLEX User's Manual (2)</a>
 <li><a href="flexapg.pdf" target="_blank">FLEX Programmer's Manual</a>
 <li><a href="6809fadg.pdf" target="_blank">6809 FLEX Adaption Guide</a>
 <li><a href="tedit.pdf" target="_blank">FLEX Editor</a>
 <li><a href="relasmb.pdf" target="_blank">FLEX 6809 Relocating Assembler</a>
 <li><a href="asmb.pdf" target="_blank">FLEX Assembler</a>
 <li><a href="linkload.pdf" target="_blank">FLEX Linking Loader</a>
 <li><a href="crasmb.pdf" target="_blank">Lloyd Macro Cross Assembler</a>
 <li><a href="6809diag.pdf" target="_blank">6809 FLEX Diagnostics</a>
 <li><a href="debug.pdf" target="_blank">6809 Debug Package</a>
 <li><a href="dynamite.pdf" target="_blank">DYNAMITE Disassembler User's Manual</a>
 <li><a href="basic_um.pdf" target="_blank">BASIC Users Manual</a>
 <li><a href="ba2bqs.pdf" target="_blank">BASIC Answers to BASIC Questions</a>
 <li><a href="basprec.pdf" target="_blank">BASIC Precompiler User's Manual</a>
 <li><a href="f77.pdf" target="_blank">Fortan 77</a>
 <li><a href="util_man.pdf" target="_blank">Windrush FLEX Utilities Package</a>
</ul>
<h2 id="OtherLinks">Other Documents</h2>

<ul>
 <li><a href=cedric.pdf target=_blank>Cedric screen editor</a>
 <li><a href="dynastar.pdf" target="_blank">Dynastar screen editor and text processor</a>
 <li><a href="just.pdf" target="_blank">Just text processor</a>
 <li><a href="TSC_Text_Processor.pdf" target="_blank">TSC Text Processor</a>
</ul>

<h2>Related Links</h2>
<ul>
 <li><a href="http://flexemu.neocities.org">Flexemu Homepage</a>
</ul>
</body>
</html>
